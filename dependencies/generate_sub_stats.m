function sub_stats = generate_sub_stats(params,dat_tbl,states)
%% taken from N2021_11_4_workflowrefactor1.mlx
sub_stats = table();
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for p=1:size(params,1)
    param = params{p,2};%'cppmich';
    param_name = [params{p,1}];%'Resistive CPP';
    %states = {'hc_bl','hc_end'};
    state_names = [{"Baseline"}, {"Hypercapnia"}];
    sds = [1,2];
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% (dat_tbl,param,param_name,states,state_names,sds)
for s=1:height(dat_tbl)
    for st=1:length(states)
        for sd=1:length(sds)
            tbl = dat_tbl.(states{st}){s};
            pdat = tbl{tbl.sds==sds(sd),param};
            ln_pulses = tbl(tbl.sds==sds(sd),{'tbin_ln','avg_bfi_ln','avg_abp_ln'});
            
            if ~iscell(pdat)
                pdat = num2cell(pdat);
            end
            
            sdat_vars = {'name',...
                'state',...
                'state_name',...
                'param',...
                'param_name',...
                'sds',...
                'pulse_samples',...
                'ln_pulses',...
                'n_pulse',...
                'mean',...
                'median',...
                'sdev',...   
                };

            sdat = [tbl.name(1) ...
                states(st)...
                state_names(st)...
                {param} ...
                {param_name}...
                {sds(sd)}...
                {pdat}...
                {ln_pulses}...
                {length(cell2mat(pdat))}...
                {nanmean(cell2mat(pdat))}...
                {nanmedian(cell2mat(pdat))}...
                {nanstd(cell2mat(pdat))}];
            
            sub_stats = [sub_stats;cell2table(sdat,'VariableNames',sdat_vars)];

        end
    end
end
%delta_st_pl(dat_tbl,param,param_name,param_units,states,state_names,colors,save_path) 
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
end